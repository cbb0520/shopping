<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huguigu.dao.GoodsDao">

    <resultMap id="goodsmap" type="Goods">
        <association property="classify" column="fid"
                     select="com.huguigu.dao.ClassifyDao.queryClassById"
                     javaType="Classify"/>
    </resultMap>
    
    <select id="queryAllGoods" resultMap="goodsmap">
        select * from goods
        <where>
            <if test="gname!=null">and gname like concat('%',#{gname},'%')</if>
            <if test="classify.fid!=0">and fid=#{classify.fid}</if>
            and udele = 0
        </where>
    </select>

    <select id="queryCountGoods" resultType="int">
        select count(1) from goods
        <where>
            <if test="gname!=null">and gname like concat('%',#{gname},'%')</if>
            <if test="classify.fid!=0">and fid=#{classify.fid}</if>
            and udele = 0
        </where>
    </select>

    <update id="delGoods" parameterType="int">
        update goods set udele = 1 where gid = #{gid}
    </update>

    <select id="queryGoodsById" parameterType="int" resultMap="goodsmap">
        select * from goods where gid = #{gid}
    </select>

    <update id="uptGoods">
        update goods
        <set>
            <if test="gname!=null"> gname = #{gname},</if>
            <if test="gimgs!=null"> gimgs = #{gimgs},</if>
            <if test="limit!=null"> `limit` = #{limit},</if>
            <if test="price!=null"> price = #{price}</if>
        </set>
        where gid = #{gid}
    </update>

    <select id="isEqual" resultType="int">
        select count(1) from goods
        <where>
            gname != #{oldgname}
            and gname = #{newgname}
            and udele = 0
        </where>
    </select>

    <select id="queryGoodsByWid" parameterType="int" resultMap="goodsmap">
        select g.*,wg.count from goods g inner join warehouse_goods wg on g.gid = wg.gid
        where g.gid in (select gid from warehouse_goods where warehouse_goods.wid = #{wid})
    </select>

    <select id="queryCountByWarehouse" parameterType="java.lang.Integer" resultType="int">
        SELECT wg.count FROM goods g INNER JOIN warehouse_goods wg ON g.gid = wg.gid
        WHERE wg.gid = #{id}
    </select>

    <insert id="joinShooping">
        insert into shopping_car values (null,#{uid},#{gid},#{count},0)
    </insert>

    <select id="isShoppingCarExist" resultType="int">
        select count(1) from shopping_car where uid=#{uid} and gid=#{gid}
    </select>

    <update id="addShoppingCarCount">
        update shopping_car set count = count + #{count}
        where uid = #{uid} and gid = #{gid}
    </update>

    <select id="queryGoodsByUid" resultMap="goodsmap">
        SELECT g.gid, fid, CODE, gname, gimgs, `limit`, soid, price, udele,sc.count,sc.`select`
        FROM goods g INNER JOIN shopping_car sc ON g.gid = sc.gid WHERE uid = #{uid}
    </select>

    <update id="uptShoppingCarCount">
        update shopping_car set count = #{count}
        where uid = #{uid} and gid = #{gid}
    </update>

    <delete id="delShoppingCar">
        delete from shopping_car where gid = #{gid} and uid = #{uid}
    </delete>

    <update id="changeSelect">
        update shopping_car set `select`= #{select} where gid = #{gid} and uid = #{uid}
    </update>

    <update id="changeAllSelect">
        update shopping_car set `select`= #{select} where uid = #{uid}
    </update>

    <select id="queryHotGoods" resultType="goods">
        SELECT * FROM goods ORDER BY soid DESC LIMIT 0,5
    </select>

    <insert id="addGoods" keyProperty="gid" useGeneratedKeys="true">
        insert into goods values (null,#{classify.fid},#{code},#{gname},#{gimgs},0,0,#{price},0)
    </insert>


    <select id="queryGoodsgnmae"  resultMap="goodsmap">
        select * from goods where gname = #{gname}
    </select>

    <select id="queryGoodsById2" parameterType="int" resultType="goods">
        select * from goods where gid = #{gid}
    </select>
</mapper>